services:
  # PostgreSQL Database
  database:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fiend"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and queue processing
  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Main application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: justice_caseload_app
    restart: always
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://${PG_USER}:${PG_PASSWORD}@database:5432/${PG_DB}?sslmode=disable
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=production
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - ./uploads:/app/uploads
    command: >
      sh -c "
        npx prisma generate &&
        npx prisma migrate deploy &&
        npm run build &&
        npm start
      "

volumes:
  postgres_data:
  redis_data: