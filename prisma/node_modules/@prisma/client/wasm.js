
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.CourtScalarFieldEnum = {
  id: 'id',
  courtName: 'courtName',
  courtCode: 'courtCode',
  courtType: 'courtType',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  originalCode: 'originalCode',
  originalNumber: 'originalNumber',
  originalYear: 'originalYear'
};

exports.Prisma.JudgeScalarFieldEnum = {
  id: 'id',
  fullName: 'fullName',
  firstName: 'firstName',
  lastName: 'lastName',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CaseTypeScalarFieldEnum = {
  id: 'id',
  caseTypeName: 'caseTypeName',
  caseTypeCode: 'caseTypeCode',
  description: 'description',
  isActive: 'isActive',
  createdAt: 'createdAt'
};

exports.Prisma.CaseScalarFieldEnum = {
  id: 'id',
  caseNumber: 'caseNumber',
  courtName: 'courtName',
  caseTypeId: 'caseTypeId',
  filedDate: 'filedDate',
  originalCourtId: 'originalCourtId',
  originalCaseNumber: 'originalCaseNumber',
  originalYear: 'originalYear',
  parties: 'parties',
  status: 'status',
  lastActivityDate: 'lastActivityDate',
  totalActivities: 'totalActivities',
  hasLegalRepresentation: 'hasLegalRepresentation',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  caseidType: 'caseidType',
  caseidNo: 'caseidNo',
  maleApplicant: 'maleApplicant',
  femaleApplicant: 'femaleApplicant',
  organizationApplicant: 'organizationApplicant',
  maleDefendant: 'maleDefendant',
  femaleDefendant: 'femaleDefendant',
  organizationDefendant: 'organizationDefendant'
};

exports.Prisma.CaseActivityScalarFieldEnum = {
  id: 'id',
  caseId: 'caseId',
  activityDate: 'activityDate',
  activityType: 'activityType',
  outcome: 'outcome',
  reasonForAdjournment: 'reasonForAdjournment',
  nextHearingDate: 'nextHearingDate',
  primaryJudgeId: 'primaryJudgeId',
  hasLegalRepresentation: 'hasLegalRepresentation',
  applicantWitnesses: 'applicantWitnesses',
  defendantWitnesses: 'defendantWitnesses',
  custodyStatus: 'custodyStatus',
  details: 'details',
  importBatchId: 'importBatchId',
  createdAt: 'createdAt',
  judge1: 'judge1',
  judge2: 'judge2',
  judge3: 'judge3',
  judge4: 'judge4',
  judge5: 'judge5',
  judge6: 'judge6',
  judge7: 'judge7',
  comingFor: 'comingFor',
  legalRepString: 'legalRepString',
  custodyNumeric: 'custodyNumeric',
  otherDetails: 'otherDetails'
};

exports.Prisma.CaseJudgeAssignmentScalarFieldEnum = {
  caseId: 'caseId',
  judgeId: 'judgeId',
  assignedAt: 'assignedAt',
  isPrimary: 'isPrimary'
};

exports.Prisma.DailyImportBatchScalarFieldEnum = {
  id: 'id',
  importDate: 'importDate',
  filename: 'filename',
  fileSize: 'fileSize',
  fileChecksum: 'fileChecksum',
  totalRecords: 'totalRecords',
  successfulRecords: 'successfulRecords',
  failedRecords: 'failedRecords',
  errorLogs: 'errorLogs',
  status: 'status',
  estimatedCompletionTime: 'estimatedCompletionTime',
  processingStartTime: 'processingStartTime',
  userConfig: 'userConfig',
  validationWarnings: 'validationWarnings',
  createdAt: 'createdAt',
  completedAt: 'completedAt',
  createdBy: 'createdBy'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  role: 'role',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ImportProgressScalarFieldEnum = {
  id: 'id',
  batchId: 'batchId',
  progressPercentage: 'progressPercentage',
  currentStep: 'currentStep',
  message: 'message',
  recordsProcessed: 'recordsProcessed',
  totalRecords: 'totalRecords',
  errorsCount: 'errorsCount',
  warningsCount: 'warningsCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ImportErrorDetailScalarFieldEnum = {
  id: 'id',
  batchId: 'batchId',
  rowNumber: 'rowNumber',
  columnName: 'columnName',
  errorType: 'errorType',
  errorMessage: 'errorMessage',
  rawValue: 'rawValue',
  suggestedFix: 'suggestedFix',
  severity: 'severity',
  isResolved: 'isResolved',
  createdAt: 'createdAt'
};

exports.Prisma.ImportSessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  sessionToken: 'sessionToken',
  status: 'status',
  startedAt: 'startedAt',
  lastActivity: 'lastActivity',
  expiresAt: 'expiresAt',
  metadata: 'metadata'
};

exports.Prisma.ValidationResultScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  filename: 'filename',
  fileChecksum: 'fileChecksum',
  validationStatus: 'validationStatus',
  totalRows: 'totalRows',
  validRows: 'validRows',
  invalidRows: 'invalidRows',
  errors: 'errors',
  warnings: 'warnings',
  previewData: 'previewData',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};
exports.CourtType = exports.$Enums.CourtType = {
  SC: 'SC',
  ELC: 'ELC',
  ELRC: 'ELRC',
  KC: 'KC',
  SCC: 'SCC',
  COA: 'COA',
  MC: 'MC',
  HC: 'HC',
  TC: 'TC'
};

exports.CaseStatus = exports.$Enums.CaseStatus = {
  ACTIVE: 'ACTIVE',
  RESOLVED: 'RESOLVED',
  PENDING: 'PENDING',
  TRANSFERRED: 'TRANSFERRED',
  DELETED: 'DELETED'
};

exports.CustodyStatus = exports.$Enums.CustodyStatus = {
  IN_CUSTODY: 'IN_CUSTODY',
  ON_BAIL: 'ON_BAIL',
  NOT_APPLICABLE: 'NOT_APPLICABLE'
};

exports.ImportStatus = exports.$Enums.ImportStatus = {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  CLEANED: 'CLEANED'
};

exports.UserRole = exports.$Enums.UserRole = {
  ADMIN: 'ADMIN',
  DATA_ENTRY: 'DATA_ENTRY',
  VIEWER: 'VIEWER'
};

exports.ErrorSeverity = exports.$Enums.ErrorSeverity = {
  ERROR: 'ERROR',
  WARNING: 'WARNING',
  INFO: 'INFO'
};

exports.Prisma.ModelName = {
  Court: 'Court',
  Judge: 'Judge',
  CaseType: 'CaseType',
  Case: 'Case',
  CaseActivity: 'CaseActivity',
  CaseJudgeAssignment: 'CaseJudgeAssignment',
  DailyImportBatch: 'DailyImportBatch',
  User: 'User',
  ImportProgress: 'ImportProgress',
  ImportErrorDetail: 'ImportErrorDetail',
  ImportSession: 'ImportSession',
  ValidationResult: 'ValidationResult'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/omega/Dev/caseload/justice-caseload/prisma/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/omega/Dev/caseload/justice-caseload/prisma/schema.test.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../../.env"
  },
  "relativePath": "../../..",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"./node_modules/@prisma/client\"\n}\n\ngenerator testClient {\n  provider = \"prisma-client-js\"\n  output   = \"./prisma/test-client\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// NOTE: This test schema mirrors the main schema but uses SQLite as the datasource.\n// It is used only during tests to avoid requiring Postgres or DB admin tools.\n\nmodel Court {\n  id        String   @id @default(uuid())\n  courtName String   @map(\"court_name\")\n  courtCode String   @unique @map(\"court_code\")\n  courtType String   @map(\"court_type\")\n  isActive  Boolean  @default(true) @map(\"is_active\")\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  originalCode   String? @map(\"original_code\")\n  originalNumber String? @map(\"original_number\")\n  originalYear   Int?    @map(\"original_year\")\n\n  cases Case[] @relation(\"OriginalCourt\")\n\n  @@index([courtType, isActive])\n  @@index([courtName])\n  @@index([courtCode])\n  @@index([originalCode])\n  @@map(\"courts\")\n}\n\nmodel Judge {\n  id        String   @id @default(uuid())\n  fullName  String   @map(\"full_name\")\n  firstName String   @map(\"first_name\")\n  lastName  String   @map(\"last_name\")\n  isActive  Boolean  @default(true) @map(\"is_active\")\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  caseActivities  CaseActivity[]        @relation(\"PrimaryJudge\")\n  caseAssignments CaseJudgeAssignment[]\n\n  @@index([fullName])\n  @@index([firstName, lastName])\n  @@index([isActive])\n  @@map(\"judges\")\n}\n\nmodel CaseType {\n  id           String   @id @default(uuid())\n  caseTypeName String   @map(\"case_type_name\")\n  caseTypeCode String   @unique @map(\"case_type_code\")\n  description  String?\n  isActive     Boolean  @default(true) @map(\"is_active\")\n  createdAt    DateTime @default(now()) @map(\"created_at\")\n\n  cases Case[]\n\n  @@index([caseTypeName])\n  @@index([isActive])\n  @@map(\"case_types\")\n}\n\nmodel Case {\n  id                     String    @id @default(uuid())\n  caseNumber             String    @map(\"case_number\")\n  courtName              String    @map(\"court_name\")\n  caseTypeId             String    @map(\"case_type_id\")\n  filedDate              DateTime  @map(\"filed_date\")\n  originalCourtId        String?   @map(\"original_court_id\")\n  originalCaseNumber     String?   @map(\"original_case_number\")\n  originalYear           Int?      @map(\"original_year\")\n  parties                Json\n  status                 String    @default(\"ACTIVE\")\n  lastActivityDate       DateTime? @map(\"last_activity_date\")\n  totalActivities        Int       @default(0) @map(\"total_activities\")\n  hasLegalRepresentation Boolean   @default(false) @map(\"has_legal_representation\")\n  createdAt              DateTime  @default(now()) @map(\"created_at\")\n  updatedAt              DateTime  @updatedAt @map(\"updated_at\")\n\n  caseidType String? @map(\"caseid_type\")\n  caseidNo   String? @map(\"caseid_no\")\n\n  maleApplicant         Int                   @default(0) @map(\"male_applicant\")\n  femaleApplicant       Int                   @default(0) @map(\"female_applicant\")\n  organizationApplicant Int                   @default(0) @map(\"organization_applicant\")\n  maleDefendant         Int                   @default(0) @map(\"male_defendant\")\n  femaleDefendant       Int                   @default(0) @map(\"female_defendant\")\n  organizationDefendant Int                   @default(0) @map(\"organization_defendant\")\n  caseType              CaseType              @relation(fields: [caseTypeId], references: [id])\n  originalCourt         Court?                @relation(\"OriginalCourt\", fields: [originalCourtId], references: [id])\n  activities            CaseActivity[]\n  judgeAssignments      CaseJudgeAssignment[]\n\n  @@unique([caseNumber, courtName], name: \"case_number_court_unique\")\n  @@map(\"cases\")\n}\n\nmodel CaseActivity {\n  id                     String    @id @default(uuid())\n  caseId                 String    @map(\"case_id\")\n  activityDate           DateTime  @map(\"activity_date\")\n  activityType           String    @map(\"activity_type\")\n  outcome                String\n  reasonForAdjournment   String?\n  nextHearingDate        DateTime?\n  primaryJudgeId         String    @map(\"primary_judge_id\")\n  hasLegalRepresentation Boolean\n  applicantWitnesses     Int       @default(0)\n  defendantWitnesses     Int       @default(0)\n  custodyStatus          String\n  details                String?\n  importBatchId          String    @map(\"import_batch_id\")\n  createdAt              DateTime  @default(now())\n\n  judge1 String?\n  judge2 String?\n  judge3 String?\n  judge4 String?\n  judge5 String?\n  judge6 String?\n  judge7 String?\n\n  comingFor      String?\n  legalRepString String?\n  custodyNumeric Int?\n  otherDetails   String?\n\n  case         Case             @relation(fields: [caseId], references: [id], onDelete: Cascade)\n  primaryJudge Judge            @relation(\"PrimaryJudge\", fields: [primaryJudgeId], references: [id])\n  importBatch  DailyImportBatch @relation(fields: [importBatchId], references: [id])\n\n  @@map(\"case_activities\")\n}\n\nmodel CaseJudgeAssignment {\n  caseId     String\n  judgeId    String\n  assignedAt DateTime @default(now())\n  isPrimary  Boolean  @default(false)\n\n  case  Case  @relation(fields: [caseId], references: [id], onDelete: Cascade)\n  judge Judge @relation(fields: [judgeId], references: [id])\n\n  @@id([caseId, judgeId])\n  @@map(\"case_judge_assignments\")\n}\n\nmodel DailyImportBatch {\n  id                      String    @id @default(uuid())\n  importDate              DateTime  @map(\"import_date\")\n  filename                String\n  fileSize                Int       @map(\"file_size\")\n  fileChecksum            String    @map(\"file_checksum\")\n  totalRecords            Int       @map(\"total_records\")\n  successfulRecords       Int       @map(\"successful_records\")\n  failedRecords           Int       @map(\"failed_records\")\n  errorLogs               Json      @map(\"error_logs\")\n  status                  String\n  estimatedCompletionTime DateTime?\n  processingStartTime     DateTime?\n  userConfig              Json\n  validationWarnings      Json\n  createdAt               DateTime  @default(now())\n  completedAt             DateTime?\n  createdBy               String    @map(\"created_by\")\n\n  activities   CaseActivity[]\n  user         User                @relation(fields: [createdBy], references: [id])\n  progress     ImportProgress[]\n  errorDetails ImportErrorDetail[]\n\n  @@map(\"daily_import_batches\")\n}\n\nmodel User {\n  id        String   @id @default(uuid())\n  email     String   @unique\n  name      String\n  role      String   @default(\"DATA_ENTRY\")\n  isActive  Boolean  @default(true) @map(\"is_active\")\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  importBatches     DailyImportBatch[]\n  importSessions    ImportSession[]\n  validationResults ValidationResult[]\n\n  @@map(\"users\")\n}\n\nmodel ImportProgress {\n  id                 String   @id @default(uuid())\n  batchId            String   @map(\"batch_id\")\n  progressPercentage Int?     @map(\"progress_percentage\")\n  currentStep        String?  @map(\"current_step\")\n  message            String?\n  recordsProcessed   Int      @default(0) @map(\"records_processed\")\n  totalRecords       Int      @default(0) @map(\"total_records\")\n  errorsCount        Int      @default(0) @map(\"errors_count\")\n  warningsCount      Int      @default(0) @map(\"warnings_count\")\n  createdAt          DateTime @default(now())\n  updatedAt          DateTime @updatedAt @map(\"updated_at\")\n\n  batch DailyImportBatch @relation(fields: [batchId], references: [id], onDelete: Cascade)\n\n  @@map(\"import_progress\")\n}\n\nmodel ImportErrorDetail {\n  id           String   @id @default(uuid())\n  batchId      String   @map(\"batch_id\")\n  rowNumber    Int?     @map(\"row_number\")\n  columnName   String?  @map(\"column_name\")\n  errorType    String   @map(\"error_type\")\n  errorMessage String   @map(\"error_message\")\n  rawValue     String?  @map(\"raw_value\")\n  suggestedFix String?  @map(\"suggested_fix\")\n  severity     String   @default(\"ERROR\")\n  isResolved   Boolean  @default(false) @map(\"is_resolved\")\n  createdAt    DateTime @default(now()) @map(\"created_at\")\n\n  batch DailyImportBatch @relation(fields: [batchId], references: [id], onDelete: Cascade)\n\n  @@map(\"import_error_details\")\n}\n\nmodel ImportSession {\n  id           String    @id @default(uuid())\n  userId       String    @map(\"user_id\")\n  sessionToken String    @unique @map(\"session_token\")\n  status       String    @default(\"ACTIVE\")\n  startedAt    DateTime  @default(now())\n  lastActivity DateTime  @default(now())\n  expiresAt    DateTime?\n  metadata     Json\n\n  user User @relation(fields: [userId], references: [id])\n\n  @@map(\"import_sessions\")\n}\n\nmodel ValidationResult {\n  id               String   @id @default(uuid())\n  userId           String   @map(\"user_id\")\n  filename         String\n  fileChecksum     String   @map(\"file_checksum\")\n  validationStatus String   @map(\"validation_status\")\n  totalRows        Int      @map(\"total_rows\")\n  validRows        Int      @map(\"valid_rows\")\n  invalidRows      Int      @map(\"invalid_rows\")\n  errors           Json\n  warnings         Json\n  previewData      Json\n  createdAt        DateTime @default(now())\n  expiresAt        DateTime\n\n  user User @relation(fields: [userId], references: [id])\n\n  @@map(\"validation_results\")\n}\n\n// Enums (mirrored from main schema to ensure Prisma client exports same enums)\nenum CourtType {\n  SC\n  ELC\n  ELRC\n  KC\n  SCC\n  COA\n  MC\n  HC\n  TC\n\n  @@map(\"court_type\")\n}\n\nenum CaseStatus {\n  ACTIVE\n  RESOLVED\n  PENDING\n  TRANSFERRED\n  DELETED\n\n  @@map(\"case_status\")\n}\n\nenum CustodyStatus {\n  IN_CUSTODY\n  ON_BAIL\n  NOT_APPLICABLE\n\n  @@map(\"custody_status\")\n}\n\nenum ImportStatus {\n  PENDING\n  PROCESSING\n  COMPLETED\n  FAILED\n  CLEANED\n\n  @@map(\"import_status\")\n}\n\nenum UserRole {\n  ADMIN\n  DATA_ENTRY\n  VIEWER\n\n  @@map(\"user_role\")\n}\n\nenum ErrorSeverity {\n  ERROR\n  WARNING\n  INFO\n\n  @@map(\"error_severity\")\n}\n",
  "inlineSchemaHash": "51309939030db66635341bab57cc5bd40cd5562d8f044a3b6b4ee029a7f12d47",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Court\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"courtName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"court_name\"},{\"name\":\"courtCode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"court_code\"},{\"name\":\"courtType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"court_type\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"originalCode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"original_code\"},{\"name\":\"originalNumber\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"original_number\"},{\"name\":\"originalYear\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"original_year\"},{\"name\":\"cases\",\"kind\":\"object\",\"type\":\"Case\",\"relationName\":\"OriginalCourt\"}],\"dbName\":\"courts\"},\"Judge\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"full_name\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"first_name\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"last_name\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"caseActivities\",\"kind\":\"object\",\"type\":\"CaseActivity\",\"relationName\":\"PrimaryJudge\"},{\"name\":\"caseAssignments\",\"kind\":\"object\",\"type\":\"CaseJudgeAssignment\",\"relationName\":\"CaseJudgeAssignmentToJudge\"}],\"dbName\":\"judges\"},\"CaseType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"caseTypeName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"case_type_name\"},{\"name\":\"caseTypeCode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"case_type_code\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"cases\",\"kind\":\"object\",\"type\":\"Case\",\"relationName\":\"CaseToCaseType\"}],\"dbName\":\"case_types\"},\"Case\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"caseNumber\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"case_number\"},{\"name\":\"courtName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"court_name\"},{\"name\":\"caseTypeId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"case_type_id\"},{\"name\":\"filedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"filed_date\"},{\"name\":\"originalCourtId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"original_court_id\"},{\"name\":\"originalCaseNumber\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"original_case_number\"},{\"name\":\"originalYear\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"original_year\"},{\"name\":\"parties\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastActivityDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_activity_date\"},{\"name\":\"totalActivities\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_activities\"},{\"name\":\"hasLegalRepresentation\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"has_legal_representation\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"caseidType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"caseid_type\"},{\"name\":\"caseidNo\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"caseid_no\"},{\"name\":\"maleApplicant\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"male_applicant\"},{\"name\":\"femaleApplicant\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"female_applicant\"},{\"name\":\"organizationApplicant\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"organization_applicant\"},{\"name\":\"maleDefendant\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"male_defendant\"},{\"name\":\"femaleDefendant\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"female_defendant\"},{\"name\":\"organizationDefendant\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"organization_defendant\"},{\"name\":\"caseType\",\"kind\":\"object\",\"type\":\"CaseType\",\"relationName\":\"CaseToCaseType\"},{\"name\":\"originalCourt\",\"kind\":\"object\",\"type\":\"Court\",\"relationName\":\"OriginalCourt\"},{\"name\":\"activities\",\"kind\":\"object\",\"type\":\"CaseActivity\",\"relationName\":\"CaseToCaseActivity\"},{\"name\":\"judgeAssignments\",\"kind\":\"object\",\"type\":\"CaseJudgeAssignment\",\"relationName\":\"CaseToCaseJudgeAssignment\"}],\"dbName\":\"cases\"},\"CaseActivity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"caseId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"case_id\"},{\"name\":\"activityDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"activity_date\"},{\"name\":\"activityType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"activity_type\"},{\"name\":\"outcome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reasonForAdjournment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nextHearingDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"primaryJudgeId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"primary_judge_id\"},{\"name\":\"hasLegalRepresentation\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"applicantWitnesses\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"defendantWitnesses\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"custodyStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"importBatchId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"import_batch_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"judge1\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"judge2\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"judge3\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"judge4\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"judge5\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"judge6\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"judge7\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"comingFor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"legalRepString\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"custodyNumeric\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"otherDetails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"case\",\"kind\":\"object\",\"type\":\"Case\",\"relationName\":\"CaseToCaseActivity\"},{\"name\":\"primaryJudge\",\"kind\":\"object\",\"type\":\"Judge\",\"relationName\":\"PrimaryJudge\"},{\"name\":\"importBatch\",\"kind\":\"object\",\"type\":\"DailyImportBatch\",\"relationName\":\"CaseActivityToDailyImportBatch\"}],\"dbName\":\"case_activities\"},\"CaseJudgeAssignment\":{\"fields\":[{\"name\":\"caseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"judgeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isPrimary\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"case\",\"kind\":\"object\",\"type\":\"Case\",\"relationName\":\"CaseToCaseJudgeAssignment\"},{\"name\":\"judge\",\"kind\":\"object\",\"type\":\"Judge\",\"relationName\":\"CaseJudgeAssignmentToJudge\"}],\"dbName\":\"case_judge_assignments\"},\"DailyImportBatch\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"importDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"import_date\"},{\"name\":\"filename\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileSize\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"file_size\"},{\"name\":\"fileChecksum\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"file_checksum\"},{\"name\":\"totalRecords\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_records\"},{\"name\":\"successfulRecords\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"successful_records\"},{\"name\":\"failedRecords\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"failed_records\"},{\"name\":\"errorLogs\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"error_logs\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estimatedCompletionTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"processingStartTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userConfig\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"validationWarnings\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"activities\",\"kind\":\"object\",\"type\":\"CaseActivity\",\"relationName\":\"CaseActivityToDailyImportBatch\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DailyImportBatchToUser\"},{\"name\":\"progress\",\"kind\":\"object\",\"type\":\"ImportProgress\",\"relationName\":\"DailyImportBatchToImportProgress\"},{\"name\":\"errorDetails\",\"kind\":\"object\",\"type\":\"ImportErrorDetail\",\"relationName\":\"DailyImportBatchToImportErrorDetail\"}],\"dbName\":\"daily_import_batches\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"importBatches\",\"kind\":\"object\",\"type\":\"DailyImportBatch\",\"relationName\":\"DailyImportBatchToUser\"},{\"name\":\"importSessions\",\"kind\":\"object\",\"type\":\"ImportSession\",\"relationName\":\"ImportSessionToUser\"},{\"name\":\"validationResults\",\"kind\":\"object\",\"type\":\"ValidationResult\",\"relationName\":\"UserToValidationResult\"}],\"dbName\":\"users\"},\"ImportProgress\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"batchId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"batch_id\"},{\"name\":\"progressPercentage\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"progress_percentage\"},{\"name\":\"currentStep\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"current_step\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recordsProcessed\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"records_processed\"},{\"name\":\"totalRecords\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_records\"},{\"name\":\"errorsCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"errors_count\"},{\"name\":\"warningsCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"warnings_count\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"batch\",\"kind\":\"object\",\"type\":\"DailyImportBatch\",\"relationName\":\"DailyImportBatchToImportProgress\"}],\"dbName\":\"import_progress\"},\"ImportErrorDetail\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"batchId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"batch_id\"},{\"name\":\"rowNumber\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"row_number\"},{\"name\":\"columnName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"column_name\"},{\"name\":\"errorType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"error_type\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"error_message\"},{\"name\":\"rawValue\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"raw_value\"},{\"name\":\"suggestedFix\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"suggested_fix\"},{\"name\":\"severity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isResolved\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_resolved\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"batch\",\"kind\":\"object\",\"type\":\"DailyImportBatch\",\"relationName\":\"DailyImportBatchToImportErrorDetail\"}],\"dbName\":\"import_error_details\"},\"ImportSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"sessionToken\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"session_token\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastActivity\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ImportSessionToUser\"}],\"dbName\":\"import_sessions\"},\"ValidationResult\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"filename\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileChecksum\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"file_checksum\"},{\"name\":\"validationStatus\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"validation_status\"},{\"name\":\"totalRows\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_rows\"},{\"name\":\"validRows\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"valid_rows\"},{\"name\":\"invalidRows\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"invalid_rows\"},{\"name\":\"errors\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"warnings\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"previewData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToValidationResult\"}],\"dbName\":\"validation_results\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

